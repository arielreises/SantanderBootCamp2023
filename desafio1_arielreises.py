# -*- coding: utf-8 -*-
"""Desafio1_ArielReises.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gbsJI4_JzINha-HY86hWSNFRJJgAnnNN

# **DESAFIO DE PROJETO:** Explorando IA Generativa em um Pipeline de ETL com Python
**Santander Bootcamp 2023 - Ciência de Dados com Python**

* **Aluno:** Ariel Reises
* **Data:** 18/08/2023

## Contexto do Problema

Você é um cientista de dados no Santander e recebeu a tarefa de envolver seus clientes de maneira mais personalizada. Seu objetivo é usar o poder da IA Generativa para criar mensagens de marketing personalizadas que serão entregues a cada cliente.
"""



"""## Condições do Problema

1. Você recebeu uma planilha simples, em formato CSV ('SDW2023.csv'), com uma lista de IDs de usuário do banco:
  ```
  UserID
  1
  2
  3
  4
  5
  ```
2. Seu trabalho é consumir o endpoint `GET https://sdw-2023-prd.up.railway.app/users/{id}` (API da Santander Dev Week 2023) para obter os dados de cada cliente.
3. Depois de obter os dados dos clientes, você vai usar a API do ChatGPT (OpenAI) para gerar uma mensagem de marketing personalizada para cada cliente. Essa mensagem deve enfatizar a importância dos investimentos.
4. Uma vez que a mensagem para cada cliente esteja pronta, você vai enviar essas informações de volta para a API, atualizando a lista de "news" de cada usuário usando o endpoint `PUT https://sdw-2023-prd.up.railway.app/users/{id}`.

Repositório da API:
```
https://github.com/arielreises/santander-dev-week-2023-api
```

URL da API:
```
https://sdw-2023-prd.up.railway.app
```
"""



"""## Documentação Oficial da API OpenAI:
```
https://platform.openai.com/docs/api-reference/introduction
```
### Informações sobre o Período Gratuito:
```
https://help.openai.com/en/articles/4936830
```
### Gerando uma API Key:
```
1. Crie uma conta na OpenAI
2. Acesse a seção "API Keys"
3. Clique em "Create API Key"
```
### Link direto:
```
https://platform.openai.com/account/api-keys
```
### Minha API Key:
```
openai_api_key = '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'
```
"""



"""# **RESOLUÇÃO**

## Extract
Extraindo a lista de IDs de usuário a partir do arquivo CSV e fazendo uma requisição get para cada ID, para obter os dados do usuário correspondente.
"""

# Instalando a biblioteca da OpenAI
!pip install openai

# Importando as bibliotecas
import pandas as pd
import requests

# Extrair IDs de usuário do arquivo CSV
df = pd.read_csv('SDW2023.csv')
ids_usuarios = df['UserID'].tolist()

# Definir URL base da API
url_base_api = 'https://sdw-2023-prd.up.railway.app/users/'

# Função para obter os dados de um usuário via GET
def obter_dados_usuario(id_usuario):
    resposta = requests.get(url_base_api + str(id_usuario))
    return resposta.json() if resposta.status_code == 200 else None

# Obter os dados de cada usuário
dados_usuarios = [obter_dados_usuario(id_usuario) for id_usuario in ids_usuarios]

"""## Transform

Utilizando a API do OpenAI GPT-4 para gerar uma mensagem de marketing personalizada para cada usuário.
"""

import openai

# Definir chave de API do OpenAI
chave_api_openai = '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'
openai.api_key = chave_api_openai

# Função para gerar mensagem personalizada usando o ChatGPT
def gerar_mensagem_investimentos(nome_usuario):
    prompt = f"Olá, {nome_usuario}! Gostaríamos de destacar a importância dos investimentos em seu planejamento financeiro. Investir pode ajudá-lo a alcançar seus objetivos de longo prazo e garantir um futuro financeiramente sólido. Nossos especialistas estão à disposição para orientá-lo nas melhores opções de investimento."

    resposta = openai.Completion.create(
        engine="text-davinci-003",
        prompt=prompt,
        max_tokens=50
    )

    return resposta.choices[0].text.strip()

# Gerar mensagens personalizadas para cada usuário
mensagens_investimentos = [gerar_mensagem_investimentos(dados_usuario['name']) for dados_usuario in dados_usuarios]

"""### Observações:

Está aparecendo o erro:
```
RateLimitError: You exceeded your current quota, please check your plan and billing details.
```

## Load

Atualizando a lista de "news" de cada usuário na API com a nova mensagem gerada.
"""

# Função para atualizar as informações do usuário via PUT
def atualizar_news_usuario(id_usuario, novas_news):
    url_atualizacao_news = url_base_api + str(id_usuario)
    resposta = requests.put(url_atualizacao_news, json={"news": novas_news})
    return resposta.status_code == 200

# Atualizar a lista de "news" para cada usuário
for i, dados_usuario in enumerate(dados_usuarios):
    dados_usuario['news'].append({
        "icon": "https://digitalinnovationone.github.io/santander-dev-week-2023-api/icons/credit.svg",
        "description": mensagens_investimentos[i]
    })

    news_atualizadas = atualizar_news_usuario(dados_usuario['id'], dados_usuario['news'])
    if news_atualizadas:
        print(f"News atualizadas para o usuário {dados_usuario['name']}")
    else:
        print(f"Falha ao atualizar news para o usuário {dados_usuario['name']}")